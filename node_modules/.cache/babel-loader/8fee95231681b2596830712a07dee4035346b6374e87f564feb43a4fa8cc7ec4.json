{"ast":null,"code":"import { createElementVNode as _createElementVNode, toHandlers as _toHandlers, mergeProps as _mergeProps, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"group\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"button groupItem\",\n  for: \"start\"\n}, \"Start\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"button groupItem\",\n  for: \"end\"\n}, \"End\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"DatePicker\"], {\n    modelValue: $setup.range,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.range = $event),\n    mode: \"dateTime\",\n    columns: 2,\n    \"is-range\": \"\"\n  }, {\n    default: _withCtx(({\n      inputValue,\n      inputEvents\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"input\", _mergeProps({\n      type: \"text\",\n      id: \"start\",\n      value: inputValue.start\n    }, _toHandlers(inputEvents.start, true), {\n      class: \"input groupItem\"\n    }), null, 16 /* FULL_PROPS */, _hoisted_3), _hoisted_4, _createElementVNode(\"input\", {\n      type: \"text\",\n      id: \"end\",\n      value: inputValue.end,\n      readonly: \"\",\n      class: \"input groupItem\"\n    }, null, 8 /* PROPS */, _hoisted_5)])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createBlock","$setup","range","$event","mode","columns","inputValue","inputEvents","_hoisted_1","_hoisted_2","_mergeProps","type","id","value","start","_toHandlers","_hoisted_3","_hoisted_4","end","readonly"],"sources":["C:\\Users\\jorge\\Documents\\vue\\consultar\\src\\components\\HelloWorld.vue"],"sourcesContent":["<script setup>\nimport { ref, reactive } from 'vue'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/dist/style.css'\n\nconst date = ref(new Date())\ndate.value.setDate(Number(date.value.getDate()) + 35)\nconst range = reactive({\n  start: new Date(),\n  end: date.value\n})\n</script>\n\n<template>\n  <DatePicker v-model=\"range\" mode=\"dateTime\" :columns=\"2\" is-range>\n    <template v-slot=\"{ inputValue, inputEvents }\">\n      <div class=\"group\">\n        <label class=\"button groupItem\" for=\"start\">Start</label>\n        <input type=\"text\" id=\"start\" :value=\"inputValue.start\" v-on=\"inputEvents.start\" class=\"input groupItem\">\n        <label class=\"button groupItem\" for=\"end\">End</label>\n        <input type=\"text\" id=\"end\" :value=\"inputValue.end\" readonly class=\"input groupItem\">\n      </div>\n    </template>\n  </DatePicker>\n</template>\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n@use form {\n  field: label, group, input, button;\n}\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #259ec6;\n}\n</style>\n"],"mappings":";;;EAgBWA,KAAK,EAAC;AAAO;gEAChBC,mBAAA,CAAyD;EAAlDD,KAAK,EAAC,kBAAkB;EAACE,GAAG,EAAC;GAAQ,OAAK;;gEAEjDD,mBAAA,CAAqD;EAA9CD,KAAK,EAAC,kBAAkB;EAACE,GAAG,EAAC;GAAM,KAAG;;;uBALnDC,YAAA,CASaC,MAAA;gBATQA,MAAA,CAAAC,KAAK;+DAALD,MAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEC,IAAI,EAAC,UAAU;IAAEC,OAAO,EAAE,CAAC;IAAE,UAAQ,EAAR;;sBAErD,CAKM;MANYC,UAAU;MAAEC;IAAW,OACzCT,mBAAA,CAKM,OALNU,UAKM,GAJJC,UAAyD,EACzDX,mBAAA,CAAyG,SAAzGY,WAAA,CAAyG;MAAlGC,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,OAAO;MAAEC,KAAK,EAAEP,UAAU,CAACQ;OAAOC,WAAA,CAAMR,WAAW,CAACO,KAAK;MAAEjB,KAAK,EAAC;IAAiB,+BAAAmB,UAAA,GACxGC,UAAqD,EACrDnB,mBAAA,CAAqF;MAA9Ea,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,KAAK;MAAEC,KAAK,EAAEP,UAAU,CAACY,GAAG;MAAEC,QAAQ,EAAR,EAAQ;MAACtB,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}